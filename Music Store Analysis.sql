
--1. Who is the senior most employee based on job title?

SELECT * FROM EMPLOYEE
ORDER BY LEVELS DESC
LIMIT 1;

--2. Which countries have the most Invoices?

SELECT COUNT (*) AS COUNT_COUNTRY, BILLING_COUNTRY FROM INVOICE
GROUP BY BILLING_COUNTRY
ORDER BY COUNT_COUNTRY DESC ;

--3. What are top 3 values of total invoice?

SELECT TOTAL FROM INVOICE
ORDER BY TOTAL DESC
LIMIT 3;

--4. Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
-- (city that has the highest sum of invoice totals)

SELECT SUM(TOTAL) AS SUM_SALES, BILLING_CITY FROM INVOICE
GROUP BY BILLING_CITY
ORDER BY SUM_SALES DESC
LIMIT 1;

--5. Who is the best customer? The customer who has spent the most money will be declared the best customer. 

SELECT CUSTOMER.CUSTOMER_ID, CUSTOMER.FIRST_NAME, CUSTOMER.LAST_NAME, SUM(INVOICE.TOTAL) 
AS CUST_SALES FROM CUSTOMER
JOIN INVOICE ON CUSTOMER.CUSTOMER_ID = INVOICE.CUSTOMER_ID
GROUP BY CUSTOMER.CUSTOMER_ID
ORDER BY CUST_SALES DESC
LIMIT 1;

--6. We need the details of all Rock Music listeners (email, first name, last name, & Genre). 

SELECT DISTINCT EMAIL, FIRST_NAME, LAST_NAME FROM CUSTOMER
JOIN INVOICE ON CUSTOMER.CUSTOMER_ID =  INVOICE.CUSTOMER_ID
JOIN INVOICE_LINE ON INVOICE.INVOICE_ID =  INVOICE_LINE.INVOICE_ID
WHERE TRACK_ID IN(
	SELECT TRACK_ID FROM TRACK
	JOIN GENRE ON TRACK.GENRE_ID =  GENRE.GENRE_ID
	WHERE GENRE.NAME LIKE 'Rock'
)
ORDER BY EMAIL ASC;

--7. We need to invite the artists who have written the most rock music in our dataset
--(Artist name and total track count of the top 10 rock bands)

SELECT ARTIST.NAME, COUNT(ARTIST.NAME) AS SONGS FROM ARTIST
JOIN ALBUM ON ARTIST.ARTIST_ID = ALBUM.ARTIST_ID
JOIN TRACK ON ALBUM.ALBUM_ID = TRACK.ALBUM_ID
WHERE TRACK_ID IN(
	SELECT TRACK_ID FROM TRACK
	JOIN GENRE ON TRACK.GENRE_ID = GENRE.GENRE_ID
	WHERE GENRE.NAME LIKE 'Rock'
)
GROUP BY ARTIST.NAME
ORDER BY SONGS DESC
LIMIT 10;

--8. We need all the track names that have a song length longer than the average song length. 
--(Name and Milliseconds for each track)

SELECT TRACK.NAME, TRACK.MILLISECONDS FROM TRACK
WHERE TRACK.MILLISECONDS > (
	SELECT AVG(TRACK.MILLISECONDS) AS AVG_LENGTH FROM TRACK)
ORDER BY TRACK.MILLISECONDS DESC;


--9. Find how much amount spent by each customer on artists? 
--(customer name, artist name and total spent)

WITH BEST_SELLING_ARTIST AS (
	SELECT ARTIST.ARTIST_ID AS ARTIST_ID, ARTIST.NAME AS ARTIST_NAME,
	SUM(INVOICE_LINE.UNIT_PRICE*INVOICE_LINE.QUANTITY) AS TOTAL_SALES FROM INVOICE_LINE
	JOIN TRACK ON TRACK.TRACK_ID = INVOICE_LINE.TRACK_ID
	JOIN ALBUM ON ALBUM.ALBUM_ID = TRACK.ALBUM_ID
	JOIN ARTIST ON ARTIST.ARTIST_ID = ALBUM.ARTIST_ID
	GROUP BY 1
	ORDER BY 3 DESC
	LIMIT 1
)
SELECT C.CUSTOMER_ID, C.FIRST_NAME, C.LAST_NAME, BSA.ARTIST_NAME, 
SUM(IL.UNIT_PRICE * IL.QUANTITY) AS AMOUNT_SPEND FROM INVOICE I
JOIN CUSTOMER C ON I.CUSTOMER_ID = C.CUSTOMER_ID
JOIN INVOICE_LINE IL ON IL.INVOICE_ID = I.INVOICE_ID
JOIN TRACK T ON T.TRACK_ID = IL.TRACK_ID
JOIN ALBUM ALB ON ALB.ALBUM_ID = T.ALBUM_ID
JOIN BEST_SELLING_ARTIST BSA ON BSA.ARTIST_ID = ALB.ARTIST_ID
GROUP BY 1,2,3,4
ORDER BY 5 DESC;


--10. Which is the most popular music Genre for each country. 
-- (The most popular genre is the genre with the highest amount of purchases)

 WITH POPULAR_GENRE AS
 (
 	SELECT COUNT(INVOICE_LINE.QUANTITY) AS PURCHASES, CUSTOMER.COUNTRY, GENRE.NAME, GENRE.GENRE_ID,
	 ROW_NUMBER() OVER (PARTITION BY CUSTOMER.COUNTRY ORDER BY COUNT(INVOICE_LINE.QUANTITY) DESC) AS ROWNO
	 FROM INVOICE_LINE
	 JOIN INVOICE ON INVOICE.INVOICE_ID = INVOICE_LINE.INVOICE_ID
	 JOIN CUSTOMER ON CUSTOMER.CUSTOMER_ID = INVOICE.CUSTOMER_ID
	 JOIN TRACK ON TRACK.TRACK_ID = INVOICE_LINE.TRACK_ID
	 JOIN GENRE ON GENRE.GENRE_ID = TRACK.GENRE_ID
	 GROUP BY 2,3,4
	 ORDER BY 2 ASC, 1 DESC
 )
 SELECT * FROM POPULAR_GENRE WHERE ROWNO <=1;
 
 
 --11. Which customer has spent the most on music for each country. 
 --(Country, Top customer and how much they spent) 

 WITH RECURSIVE
	CUSTOMER_WITH_COUNTRY AS (
 		SELECT CUSTOMER.CUSTOMER_ID, FIRST_NAME, LAST_NAME, BILLING_COUNTRY, SUM(TOTAL) AS TOTAL_SPENDING 
 		FROM INVOICE
 		JOIN CUSTOMER ON CUSTOMER.CUSTOMER_ID = INVOICE.CUSTOMER_ID
 		GROUP BY 1,2,3,4 
 		ORDER BY 1, 5 DESC),
 	
	COUNTRY_MAX_SPENDING AS (
		SELECT BILLING_COUNTRY, MAX(TOTAL_SPENDING) AS MAX_SPENDING
		FROM CUSTOMER_WITH_COUNTRY
		GROUP BY BILLING_COUNTRY)
		
	SELECT CC.BILLING_COUNTRY, CC.TOTAL_SPENDING, CC.FIRST_NAME, CC.LAST_NAME, CC.CUSTOMER_ID
	FROM CUSTOMER_WITH_COUNTRY CC
	JOIN COUNTRY_MAX_SPENDING MS ON CC.BILLING_COUNTRY = MS.BILLING_COUNTRY
	WHERE CC.TOTAL_SPENDING = MS.MAX_SPENDING
	ORDER BY 1;
	
 
 
 
 
 














